{"id":"index.js","dependencies":[{"name":"/Users/admin/Documents/GitHub/javascript/package.json","includedInParent":true,"mtime":1636052718596}],"generated":{"js":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction f() {\n  return _f.apply(this, arguments);\n}\n\nfunction _f() {\n  _f = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", 'ok');\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _f.apply(this, arguments);\n}\n\nf().then(console.log).catch(console.log);"},"sourceMaps":{"js":{"mappings":[{"name":"f","generated":{"line":5,"column":9},"source":"index.js","original":{"line":1,"column":15}},{"generated":{"line":10,"column":63},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":14,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":15,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":15,"column":45},"source":"index.js","original":{"line":3,"column":9}},{"generated":{"line":15,"column":49},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":17,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":18,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":19,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":20,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":21,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":22,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":23,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"name":"f","generated":{"line":27,"column":0},"source":"index.js","original":{"line":6,"column":0}},{"generated":{"line":27,"column":1},"source":"index.js","original":{"line":6,"column":1}},{"name":"then","generated":{"line":27,"column":4},"source":"index.js","original":{"line":6,"column":4}},{"generated":{"line":27,"column":8},"source":"index.js","original":{"line":6,"column":0}},{"name":"console","generated":{"line":27,"column":9},"source":"index.js","original":{"line":6,"column":9}},{"generated":{"line":27,"column":16},"source":"index.js","original":{"line":6,"column":16}},{"name":"log","generated":{"line":27,"column":17},"source":"index.js","original":{"line":6,"column":17}},{"generated":{"line":27,"column":20},"source":"index.js","original":{"line":6,"column":0}},{"name":"catch","generated":{"line":27,"column":22},"source":"index.js","original":{"line":6,"column":22}},{"generated":{"line":27,"column":27},"source":"index.js","original":{"line":6,"column":0}},{"name":"console","generated":{"line":27,"column":28},"source":"index.js","original":{"line":6,"column":28}},{"generated":{"line":27,"column":35},"source":"index.js","original":{"line":6,"column":35}},{"name":"log","generated":{"line":27,"column":36},"source":"index.js","original":{"line":6,"column":36}},{"generated":{"line":27,"column":39},"source":"index.js","original":{"line":6,"column":0}}],"sources":{"index.js":"async function f() {\n  // const pr = await new Promise.reject('reject');\n  return 'ok';\n}\n\nf().then(console.log).catch(console.log);\n"},"lineCount":null}},"error":null,"hash":"00859750166acf40a092e3198dc9698d","cacheData":{"env":{}}}