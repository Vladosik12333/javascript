{"mappings":"AAAA,EAAoC,AAApC,kCAAoC;AACpC,EAAkC,AAAlC,gCAAkC;AAClC,EAAkG,AAAlG,gGAAkG;AAClG,EAAM,AAAN,IAAM;AACN,EAAiC,AAAjC,+BAAiC;AACjC,EAAmC,AAAnC,iCAAmC;AAEnC,EAA2B,AAA3B,yBAA2B;AAC3B,EAAK,AAAL,GAAK;AAEL,EAAiB,AAAjB,eAAiB;AAEjB,EAAiB,AAAjB,eAAiB;AAEjB,KAAK,CAAC,OAAO,GAAG,CAAkC;AAClD,KAAK,CAAC,QAAQ,GAAG,CAA4B;MAEvC,cAAc;IAClB,IAAI,GAAG,CAAC;IACR,EAAkB,AAAlB,gBAAkB;IAClB,EAAI,AAAJ,EAAI;IAEJ,WAAW,UAAU,KAAK,EAAE,WAAW,GAAK,CAAC;QAC3C,GAAG,CAAC,CAAC;YACH,EAA0D,AAA1D,wDAA0D;YAE1D,WAAW,KAAK,CAAC;YAEjB,KAAK,CAAC,GAAG,MAAM,QAAQ,CAAC,wBAAwB,EAAE,OAAO,CAAC,0CAA0C,EAAE,KAAK,CAAC,MAAM,EAAE,WAAW;YAE/H,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG;YAEhC,EAA2B,AAA3B,yBAA2B;YAE3B,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI;YAClC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,GAAG,IAAI,GAAG,KAAK;YAEzD,EAAE,EAAE,MAAM,EACR,KAAK,CAAC,cAAc,CAAC,CAAS;YAGhC,MAAM,CAAC,MAAM;QACf,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO;QAC3B,CAAC;IACH,CAAC;;AAGH,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,cAAc;AAE9B,GAAG,CAAC,WAAW,CAAC,CAAc;AAC9B,GAAG,CAAC,WAAW,CAAC,CAAQ,SAAE,CAAC","sources":["src/index.js"],"sourcesContent":["// const reqPopulare = async () => {\n//   const respJson = await fetch(\n//     'https://api.themoviedb.org/3/trending/movie/day?api_key=3634b3d3506b5f3dc1d4858dbd6d21ce',\n//   )\n//     .then(resp => resp.json())\n//     .catch(e => console.log(e));\n\n//   console.dir(respJson);\n// };\n\n// reqPopulare();\n\n// reqPopulare();\n\nconst API_KEY = 'e8ad9fce8be376ae39b35f64abca58d4';\nconst BASE_URL = 'https://api.themoviedb.org';\n\nclass NewsApiService {\n  page = 1;\n  // constructor() {\n  // }\n\n  fetchMovies = async (query, currentPage) => {\n    try {\n      // currentPage ??= this.page || this.page === currentPage;\n\n      currentPage ??= 1;\n\n      const url = `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&include_adult=false&query=${query}&page=${currentPage}`;\n\n      const response = await fetch(url);\n\n      // this.page = currentPage;\n\n      const movies = await response.json();\n      const status = movies.results.length === 0 ? true : false;\n\n      if (status) {\n        throw ReferenceError('0 films');\n      }\n\n      return movies;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n}\n\nconst api = new NewsApiService();\n\napi.fetchMovies('123213213213');\napi.fetchMovies('Spider', 5);\n"],"names":[],"version":3,"file":"index.017db2f2.js.map","sourceRoot":"/__parcel_source_root/"}